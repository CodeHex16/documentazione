name: Compile Typst docs
on: [push, workflow_dispatch]

permissions:
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install typst CLI
              run: |
                  mkdir -p $HOME/.local/bin
                  echo $HOME/.local/bin >> $GITHUB_PATH
                  wget https://github.com/typst/typst/releases/latest/download/typst-x86_64-unknown-linux-musl.tar.xz -O /tmp/typst-x86_64-unknown-linux-musl.tar.xz
                  tar xf /tmp/typst-x86_64-unknown-linux-musl.tar.xz -C $HOME/.local/bin --strip-components=1 typst-x86_64-unknown-linux-musl/typst

            - name: Install Noto Sans font
              run: |
                  mkdir -p $HOME/.local/share/fonts
                  wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSans-unhinted.zip -O /tmp/NotoSans-unhinted.zip
                  unzip /tmp/NotoSans-unhinted.zip -d $HOME/.local/share/fonts
                  fc-cache -f -v

            - name: Install JetBrains Mono font
              run: |
                  wget https://download.jetbrains.com/fonts/JetBrainsMono-2.242.zip -O /tmp/JetBrainsMono.zip
                  unzip /tmp/JetBrainsMono.zip -d $HOME/.local/share/fonts
                  fc-cache -f -v

            - name: Remove old PDF files except for _ext and _firmato
              run: |
                  find . -name "*.pdf" ! -name "*_ext.pdf" ! -name "*_firmato.pdf" -exec rm {} \;

            - name: Find and compile Typst files
              run: |
                  find . -path ./template -prune -o -name "*.typ" -print0 | while IFS= read -r -d '' file; do
                    typst compile --root . "$file" "${file%.typ}.pdf" --font-path $HOME/.local/share/fonts
                  done

            - name: Remove PDF files with same name as _ext or _firmato
              run: |
                  find . -name "*_ext.pdf" -o -name "*_firmato.pdf" | while read -r file; do
                  base=$(basename "$file" "_ext.pdf")
                  base=${base%_firmato.pdf}
                  find . -name "${base}.pdf" -exec rm {} \;
                  done

            - name: Move PDF files to parent directory
              run: |
                  find . -name "*.pdf" ! -name "*_ext.pdf" ! -name "*_firmato.pdf" -exec sh -c 'mv "$0" "$(dirname "$0")/../"' {} \;

            - name: Upload PDF files
              uses: actions/upload-artifact@v4
              with:
                  name: Documentazione-CodeHex16
                  path: "**/*.pdf"

            - name: Commit and push PDF files
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                  git add '**/*.pdf'
                  git commit -m 'Add compiled PDF files'
                  git push
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

            - name: Checkout codehex16.github.io repository
              uses: actions/checkout@v3
              with:
                  repository: codehex16/codehex16.github.io
                  token: ${{ secrets.PAT_TOKEN}}
                  path: codehex16.github.io

            - name: Copia i file PDF nella cartella docs
              run: |
                  mkdir -p codehex16.github.io/docs
                  find . -name "*.pdf" -exec sh -c 'mkdir -p "codehex16.github.io/docs/$(dirname "$0")" && cp "$0" "codehex16.github.io/docs/$0"' {} \;

            - name: Commit e push delle modifiche
              working-directory: codehex16.github.io
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                  git add docs/**/*.pdf
                  git commit -m 'Add compiled PDF files to docs/' || echo "No changes to commit"
                  git push
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}